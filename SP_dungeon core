using System;
using System.Collections.Generic;

class Program
{
    // 캐릭터 클래스
    public class Character
    {
        public int Level { get; set; } = 1;
        public string Name { get; set; } = "Chad";
        public string Job { get; set; } = "전사";
        public int BaseAttack { get; set; } = 10;
        public int BaseDefense { get; set; } = 5;
        public int Health { get; set; } = 100;
        public int Gold { get; set; } = 1500;
        public List<Item> Inventory { get; set; } = new List<Item>();
        public List<Item> EquippedItems { get; set; } = new List<Item>();
    }

    // 아이템 클래스
    public class Item
    {
        public string Name { get; set; }
        public int AttackBonus { get; set; }
        public int DefenseBonus { get; set; }
        public string Description { get; set; }
        public int Price { get; set; }
        public bool IsPurchased { get; set; }
        public bool IsEquipped { get; set; }

        public Item(string name, int attackBonus, int defenseBonus, string description, int price)
        {
            Name = name;
            AttackBonus = attackBonus;
            DefenseBonus = defenseBonus;
            Description = description;
            Price = price;
            IsPurchased = false;
            IsEquipped = false;
        }
    }

    static Character player = new Character();
    static List<Item> shopItems = new List<Item>
    {
        new Item("수련자 갑옷", 0, 5, "수련에 도움을 주는 갑옷입니다.", 1000),
        new Item("무쇠갑옷", 0, 9, "무쇠로 만들어져 튼튼한 갑옷입니다.", 0) { IsPurchased = true },
        new Item("스파르타의 갑옷", 0, 15, "스파르타의 전사들이 사용했다는 전설의 갑옷입니다.", 3500),
        new Item("낡은 검", 2, 0, "쉽게 볼 수 있는 낡은 검 입니다.", 600),
        new Item("청동 도끼", 5, 0, "어디선가 사용됐던거 같은 도끼입니다.", 1500),
        new Item("스파르타의 창", 7, 0, "스파르타의 전사들이 사용했다는 전설의 창입니다.", 0) { IsPurchased = true }
    };

    static void Main(string[] args)
    {
        // 초기 인벤토리에 구매 완료된 아이템 추가
        player.Inventory.AddRange(shopItems.FindAll(item => item.IsPurchased));
        player.EquippedItems.Add(player.Inventory.Find(item => item.Name == "무쇠갑옷"));
        player.EquippedItems.Add(player.Inventory.Find(item => item.Name == "스파르타의 창"));
        player.EquippedItems.ForEach(item => item.IsEquipped = true);

        while (true)
        {
            DisplayMainMenu();
        }
    }

    static void DisplayMainMenu()
    {
        Console.Clear();
        Console.WriteLine("스파르타 마을에 오신 여러분 환영합니다.");
        Console.WriteLine("이곳에서 던전으로 들어가기전 활동을 할 수 있습니다.");
        Console.WriteLine();
        Console.WriteLine("1. 상태 보기");
        Console.WriteLine("2. 인벤토리");
        Console.WriteLine("3. 상점");
        Console.WriteLine();
        Console.Write("원하시는 행동을 입력해주세요.\n>> ");

        string input = Console.ReadLine();
        switch (input)
        {
            case "1": DisplayStatus(); break;
            case "2": DisplayInventory(); break;
            case "3": DisplayShop(); break;
            default: Console.WriteLine("잘못된 입력입니다."); Console.ReadLine(); break;
        }
    }

    static void DisplayStatus()
    {
        Console.Clear();
        Console.WriteLine("상태 보기");
        Console.WriteLine("캐릭터의 정보가 표시됩니다.");
        Console.WriteLine();
        Console.WriteLine($"Lv. {player.Level:D2}");
        Console.WriteLine($"{player.Name} ( {player.Job} )");

        int totalAttack = player.BaseAttack + player.EquippedItems.Sum(item => item.AttackBonus);
        int attackBonus = player.EquippedItems.Sum(item => item.AttackBonus);
        int totalDefense = player.BaseDefense + player.EquippedItems.Sum(item => item.DefenseBonus);
        int defenseBonus = player.EquippedItems.Sum(item => item.DefenseBonus);

        Console.WriteLine($"공격력 : {totalAttack} {(attackBonus > 0 ? $"(+{attackBonus})" : "")}");
        Console.WriteLine($"방어력 : {totalDefense} {(defenseBonus > 0 ? $"(+{defenseBonus})" : "")}");
        Console.WriteLine($"체 력 : {player.Health}");
        Console.WriteLine($"Gold : {player.Gold} G");
        Console.WriteLine();
        Console.WriteLine("0. 나가기");
        Console.WriteLine();
        Console.Write("원하시는 행동을 입력해주세요.\n>> ");

        string input = Console.ReadLine();
        if (input != "0") Console.WriteLine("잘못된 입력입니다.");
        Console.ReadLine();
    }

    static void DisplayInventory()
    {
        while (true)
        {
            Console.Clear();
            Console.WriteLine("인벤토리");
            Console.WriteLine("보유 중인 아이템을 관리할 수 있습니다.");
            Console.WriteLine();
            Console.WriteLine("[아이템 목록]");
            foreach (var item in player.Inventory)
            {
                Console.WriteLine($"- {(item.IsEquipped ? "[E]" : "")}{item.Name,-15} | " +
                    $"{(item.AttackBonus > 0 ? $"공격력 +{item.AttackBonus}" : item.DefenseBonus > 0 ? $"방어력 +{item.DefenseBonus}" : "")} | {item.Description}");
            }
            Console.WriteLine();
            Console.WriteLine("1. 장착 관리");
            Console.WriteLine("0. 나가기");
            Console.WriteLine();
            Console.Write("원하시는 행동을 입력해주세요.\n>> ");

            string input = Console.ReadLine();
            if (input == "1") DisplayEquipManagement();
            else if (input == "0") break;
            else { Console.WriteLine("잘못된 입력입니다."); Console.ReadLine(); }
        }
    }

    static void DisplayEquipManagement()
    {
        while (true)
        {
            Console.Clear();
            Console.WriteLine("인벤토리 - 장착 관리");
            Console.WriteLine("보유 중인 아이템을 관리할 수 있습니다.");
            Console.WriteLine();
            Console.WriteLine("[아이템 목록]");
            for (int i = 0; i < player.Inventory.Count; i++)
            {
                var item = player.Inventory[i];
                Console.WriteLine($"- {i + 1} {(item.IsEquipped ? "[E]" : "")}{item.Name,-15} | " +
                    $"{(item.AttackBonus > 0 ? $"공격력 +{item.AttackBonus}" : item.DefenseBonus > 0 ? $"방어력 +{item.DefenseBonus}" : "")} | {item.Description}");
            }
            Console.WriteLine();
            Console.WriteLine("0. 나가기");
            Console.WriteLine();
            Console.Write("원하시는 행동을 입력해주세요.\n>> ");

            string input = Console.ReadLine();
            if (input == "0") break;
            if (int.TryParse(input, out int index) && index >= 1 && index <= player.Inventory.Count)
            {
                var item = player.Inventory[index - 1];
                item.IsEquipped = !item.IsEquipped;
                if (item.IsEquipped) player.EquippedItems.Add(item);
                else player.EquippedItems.Remove(item);
            }
            else
            {
                Console.WriteLine("잘못된 입력입니다.");
                Console.ReadLine();
            }
        }
    }

    static void DisplayShop()
    {
        while (true)
        {
            Console.Clear();
            Console.WriteLine("상점");
            Console.WriteLine("필요한 아이템을 얻을 수 있는 상점입니다.");
            Console.WriteLine();
            Console.WriteLine($"[보유 골드]\n{player.Gold} G");
            Console.WriteLine();
            Console.WriteLine("[아이템 목록]");
            foreach (var item in shopItems)
            {
                Console.WriteLine($"- {item.Name,-15} | " +
                    $"{(item.AttackBonus > 0 ? $"공격력 +{item.AttackBonus}" : item.DefenseBonus > 0 ? $"방어력 +{item.DefenseBonus}" : "")} | " +
                    $"{item.Description,-35} | {(item.IsPurchased ? "구매완료" : $"{item.Price} G")}");
            }
            Console.WriteLine();
            Console.WriteLine("1. 아이템 구매");
            Console.WriteLine("0. 나가기");
            Console.WriteLine();
            Console.Write("원하시는 행동을 입력해주세요.\n>> ");

            string input = Console.ReadLine();
            if (input == "1") DisplayPurchaseMenu();
            else if (input == "0") break;
            else { Console.WriteLine("잘못된 입력입니다."); Console.ReadLine(); }
        }
    }

    static void DisplayPurchaseMenu()
    {
        while (true)
        {
            Console.Clear();
            Console.WriteLine("상점 - 아이템 구매");
            Console.WriteLine("필요한 아이템을 얻을 수 있는 상점입니다.");
            Console.WriteLine();
            Console.WriteLine($"[보유 골드]\n{player.Gold} G");
            Console.WriteLine();
            Console.WriteLine("[아이템 목록]");
            for (int i = 0; i < shopItems.Count; i++)
            {
                var item = shopItems[i];
                Console.WriteLine($"- {i + 1} {item.Name,-15} | " +
                    $"{(item.AttackBonus > 0 ? $"공격력 +{item.AttackBonus}" : item.DefenseBonus > 0 ? $"방어력 +{item.DefenseBonus}" : "")} | " +
                    $"{item.Description,-35} | {(item.IsPurchased ? "구매완료" : $"{item.Price} G")}");
            }
            Console.WriteLine();
            Console.WriteLine("0. 나가기");
            Console.WriteLine();
            Console.Write("원하시는 행동을 입력해주세요.\n>> ");

            string input = Console.ReadLine();
            if (input == "0") break;
            if (int.TryParse(input, out int index) && index >= 1 && index <= shopItems.Count)
            {
                var item = shopItems[index - 1];
                if (item.IsPurchased)
                {
                    Console.WriteLine("이미 구매한 아이템입니다.");
                }
                else if (player.Gold >= item.Price)
                {
                    player.Gold -= item.Price;
                    item.IsPurchased = true;
                    player.Inventory.Add(item);
                    Console.WriteLine("구매를 완료했습니다.");
                }
                else
                {
                    Console.WriteLine("Gold 가 부족합니다.");
                }
            }
            else
            {
                Console.WriteLine("잘못된 입력입니다.");
            }
            Console.ReadLine();
        }
    }
}
